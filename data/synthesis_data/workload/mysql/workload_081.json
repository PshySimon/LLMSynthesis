{
  "app_name": "mysql",
  "app_version": "5.6",
  "bottlenecks": [
    "未优化的JOIN操作导致性能下降"
  ],
  "system": {
    "os_version": "openEuler 24.03 LTS",
    "cpu_info": "8 核 @ 2.4GHz",
    "memory_info": "16GB DDR4",
    "storage_type": "NVMe SSD",
    "network_info": "万兆以太网",
    "runtime_environment": "Docker 容器"
  },
  "workload": {
    "system": {
      "cpu_utilization": "65%",
      "memory_utilization": "70%",
      "disk_iops": "4500",
      "disk_latency": "2ms",
      "network_throughput": "800Mbps"
    },
    "mysql": {
      "query_execution_time": "120ms",
      "slow_queries": "15 queries/min",
      "join_operations": "25 operations/sec",
      "innodb_buffer_pool_hit_rate": "85%",
      "threads_running": "12",
      "lock_wait_time": "300ms"
    }
  },
  "config": {
    "innodb_buffer_pool_size": "8G",
    "innodb_log_file_size": "1G",
    "innodb_flush_method": "O_DIRECT",
    "join_buffer_size": "256M",
    "max_connections": "200",
    "query_cache_size": "0",
    "innodb_io_capacity": "2000",
    "innodb_thread_concurrency": "8"
  },
  "param_knowledge": "join_buffer_size  \n- 控制为每个JOIN操作分配的内存缓冲区大小，用于优化没有索引的JOIN操作；  \n- 推荐设置为4M-16M（根据可用内存调整，通常不超过总内存的1%）；  \n- 是否动态生效：是；  \n- 影响维度：内存、IO（减少临时表写入）；  \n\noptimizer_switch  \n- 控制查询优化器的行为开关，可通过调整子参数（如`batched_key_access`、`block_nested_loop`）改变JOIN执行策略；  \n- 推荐根据场景启用`batched_key_access=on`或`hash_join=on`；  \n- 是否动态生效：是；  \n- 影响维度：CPU、IO（优化执行计划减少计算开销）；  \n\nmax_join_size  \n- 限制单个JOIN查询可处理的最大行数，避免低效JOIN消耗过多资源；  \n- 推荐设置为100000-1000000（根据业务容忍度调整）；  \n- 是否动态生效：是；  \n- 影响维度：CPU、内存（强制终止低效查询）；  \n\nread_rnd_buffer_size  \n- 控制排序后读取行的缓冲区大小，影响JOIN中排序操作的效率；  \n- 推荐设置为256K-2M（过大会增加内存压力）；  \n- 是否动态生效：是；  \n- 影响维度：内存、IO（减少随机IO次数）；  \n\ntmp_table_size  \n- 控制内存临时表的最大容量，超出后转为磁盘临时表，影响JOIN中间结果存储；  \n- 推荐设置为16M-64M（需与max_heap_table_size一致）；  \n- 是否动态生效：是；  \n- 影响维度：内存、IO（减少磁盘临时表使用）；"
}