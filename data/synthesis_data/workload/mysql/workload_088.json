{
  "app_name": "mysql",
  "app_version": "5.6",
  "bottlenecks": [
    "大量写操作导致锁竞争"
  ],
  "system": {
    "os_version": "openEuler 24.03 LTS",
    "cpu_info": "8 核 @ 2.4GHz",
    "memory_info": "16GB DDR4",
    "storage_type": "NVMe SSD",
    "network_info": "万兆以太网",
    "runtime_environment": "Docker 容器"
  },
  "workload": {
    "system": {
      "cpu_utilization": "75%",
      "memory_utilization": "12GB/16GB (75%)",
      "disk_iops": "15,000",
      "disk_latency": "2ms",
      "network_throughput": "800MB/s"
    },
    "mysql": {
      "qps": "5,000",
      "tps": "1,200",
      "lock_wait_time": "500ms",
      "innodb_buffer_pool_hit_rate": "85%",
      "slow_queries": "50 per second",
      "threads_running": "45"
    }
  },
  "config": {
    "innodb_buffer_pool_size": "8G",
    "innodb_log_file_size": "1G",
    "innodb_flush_log_at_trx_commit": "2",
    "innodb_thread_concurrency": "16",
    "innodb_read_io_threads": "8",
    "innodb_write_io_threads": "8",
    "innodb_lock_wait_timeout": "30",
    "sync_binlog": "0"
  },
  "param_knowledge": "innodb_thread_concurrency  \n- 控制 InnoDB 引擎内部并发线程的最大数量，用于减少线程竞争；  \n- 推荐设置为 CPU核心数的 2~4 倍，或默认值 0（自适应）；  \n- 是否动态生效：是；  \n- 影响维度：CPU、锁竞争；  \n\ninnodb_flush_log_at_trx_commit  \n- 控制事务提交时日志刷盘的严格程度，权衡数据安全性与写入性能；  \n- 推荐设置为 2（非严格持久化，每秒刷盘）或 1（严格持久化，默认值）；  \n- 是否动态生效：是；  \n- 影响维度：IO、写入延迟；  \n\ninnodb_autoinc_lock_mode  \n- 控制自增列锁定的策略，影响批量插入的并发性；  \n- 推荐设置为 2（交错模式，最高并发）；  \n- 是否动态生效：否（需重启）；  \n- 影响维度：锁竞争、吞吐量；  \n\ninnodb_buffer_pool_size  \n- 控制 InnoDB 缓冲池的内存大小，缓存表数据与索引；  \n- 推荐设置为可用物理内存的 50%~70%；  \n- 是否动态生效：是（部分版本支持）；  \n- 影响维度：内存、IO；  \n\ninnodb_deadlock_detect  \n- 控制是否启用死锁检测机制，关闭可减少高并发下的检测开销；  \n- 推荐设置为 OFF（仅适用于明确无死锁场景）；  \n- 是否动态生效：是；  \n- 影响维度：CPU、锁竞争；"
}