{
  "app_name": "mysql",
  "app_version": "5.6",
  "bottlenecks": [
    "未优化的查询导致全表扫描"
  ],
  "system": {
    "os_version": "openEuler 24.03 LTS",
    "cpu_info": "8 核 @ 2.4GHz",
    "memory_info": "16GB DDR4",
    "storage_type": "NVMe SSD",
    "network_info": "万兆以太网",
    "runtime_environment": "Docker 容器"
  },
  "workload": {
    "system": {
      "cpu_utilization": "75%",
      "memory_utilization": "12GB (75%)",
      "disk_iops": "8500",
      "disk_latency": "2.5ms",
      "network_throughput": "600MB/s"
    },
    "mysql": {
      "qps": "1200",
      "slow_queries": "45 per second",
      "select_full_join": "30 per second",
      "innodb_buffer_pool_hit_rate": "85%",
      "table_locks_waited": "20 per second",
      "threads_running": "15"
    }
  },
  "config": {
    "innodb_buffer_pool_size": "8G",
    "innodb_log_file_size": "1G",
    "query_cache_size": "0",
    "max_connections": "200",
    "innodb_io_capacity": "2000",
    "innodb_flush_neighbors": "0",
    "innodb_read_io_threads": "8",
    "innodb_write_io_threads": "8"
  },
  "param_knowledge": "innodb_buffer_pool_size  \n- 控制 InnoDB 存储引擎用于缓存数据和索引的内存池大小；  \n- 推荐设置为物理内存的 50%~70%（需确保系统留有足够内存供其他进程使用）；  \n- 是否动态生效：否（需重启生效）；  \n- 影响维度：内存、IO（减少磁盘读写）；  \n\nquery_cache_size  \n- 控制 MySQL 查询缓存的内存分配大小，缓存相同查询的结果集；  \n- 推荐设置为 32M~256M（若查询重复率低可禁用设为 0）；  \n- 是否动态生效：是；  \n- 影响维度：内存、CPU（缓存命中时降低解析开销）；  \n\nmax_connections  \n- 控制 MySQL 允许的最大并发连接数；  \n- 推荐根据应用并发需求设置（通常 100~300，需避免过高导致内存耗尽）；  \n- 是否动态生效：是；  \n- 影响维度：内存、CPU（连接数过多会增加上下文切换开销）；  \n\ninnodb_io_capacity  \n- 控制 InnoDB 后台任务的 I/O 吞吐能力（如刷新脏页）；  \n- 推荐根据存储设备性能设置（SSD 建议 1000~2000，HDD 建议 200~400）；  \n- 是否动态生效：是；  \n- 影响维度：IO（影响写入性能和脏页清理效率）；  \n\noptimizer_search_depth  \n- 控制 SQL 优化器执行计划的搜索深度；  \n- 推荐设置为 4~6（过高值可能导致优化时间激增）；  \n- 是否动态生效：是；  \n- 影响维度：CPU（复杂查询的解析开销）；"
}