{
  "app_name": "mysql",
  "app_version": "5.7",
  "bottlenecks": [
    "大事务导致锁持有时间过长"
  ],
  "system": {
    "os_version": "openEuler 24.03 LTS",
    "cpu_info": "8 核 @ 2.4GHz",
    "memory_info": "16GB DDR4",
    "storage_type": "NVMe SSD",
    "network_info": "万兆以太网",
    "runtime_environment": "Docker 容器"
  },
  "workload": {
    "system": {
      "cpu_usage": "65%",
      "memory_usage": "12GB/16GB",
      "disk_iops": "8500",
      "disk_latency": "1.2ms",
      "network_throughput": "600MB/s",
      "context_switches": "12000/s"
    },
    "mysql": {
      "qps": "4500",
      "tps": "1200",
      "active_transactions": "35",
      "long_running_transactions": "5",
      "lock_wait_time": "3.5s",
      "innodb_buffer_pool_hit_rate": "92%",
      "slow_queries": "15/min",
      "threads_running": "28"
    }
  },
  "config": {
    "innodb_buffer_pool_size": "8G",
    "innodb_log_file_size": "2G",
    "innodb_flush_log_at_trx_commit": "2",
    "innodb_lock_wait_timeout": "30",
    "max_connections": "200",
    "transaction_isolation": "READ-COMMITTED",
    "binlog_format": "ROW",
    "innodb_io_capacity": "2000"
  },
  "param_knowledge": "innodb_lock_wait_timeout  \n- 控制 InnoDB 事务等待行锁的最长时间（秒），超时后自动回滚；  \n- 推荐设置为 30-120（根据业务容忍度调整），OLTP 系统建议低值；  \n- 是否动态生效：是；  \n- 影响维度：锁竞争、事务吞吐量、响应时间；  \n\ninnodb_rollback_on_timeout  \n- 控制锁等待超时后是否回滚整个事务（而非仅最后一条语句）；  \n- 推荐设置为 OFF（避免大事务完全回滚加重开销）；  \n- 是否动态生效：否；  \n- 影响维度：事务原子性、锁持有时间、系统负载；  \n\ninnodb_deadlock_detect  \n- 控制是否启用 InnoDB 死锁检测机制；  \n- 高并发场景建议 ON，若死锁频繁可临时关闭；  \n- 是否动态生效：是；  \n- 影响维度：CPU 开销、锁等待延迟；  \n\ninnodb_print_all_deadlocks  \n- 控制是否将全部死锁信息写入错误日志；  \n- 诊断阶段建议 ON，生产环境建议 OFF；  \n- 是否动态生效：是；  \n- 影响维度：日志 I/O、故障诊断效率；  \n\ntransaction_isolation  \n- 控制事务隔离级别（如 READ-COMMITTED/REPEATABLE-READ）；  \n- 推荐根据业务需求选择，读多写少场景可考虑 READ-COMMITTED；  \n- 是否动态生效：是（会话级）；  \n- 影响维度：锁粒度、并发性能、数据一致性；"
}