{
  "app_name": "mysql",
  "app_version": "8.0",
  "bottlenecks": [
    "索引缺失或不当导致查询性能低下"
  ],
  "system": {
    "os_version": "openEuler 24.03 LTS",
    "cpu_info": "8 核 @ 2.4GHz",
    "memory_info": "16GB DDR4",
    "storage_type": "NVMe SSD",
    "network_info": "万兆以太网",
    "runtime_environment": "Docker 容器"
  },
  "workload": {
    "system": {
      "cpu_utilization": "65%",
      "memory_utilization": "70%",
      "disk_iops": "8500",
      "disk_latency": "2.5ms",
      "network_throughput": "600MB/s"
    },
    "mysql": {
      "qps": "1200",
      "slow_query_rate": "8%",
      "innodb_buffer_pool_hit_rate": "85%",
      "lock_wait_time": "300ms",
      "index_usage_efficiency": "60%"
    }
  },
  "config": {
    "innodb_buffer_pool_size": "8G",
    "innodb_io_capacity": "2000",
    "innodb_io_capacity_max": "4000",
    "innodb_flush_neighbors": "0",
    "innodb_read_io_threads": "8",
    "innodb_write_io_threads": "8",
    "query_cache_type": "OFF",
    "max_connections": "200",
    "table_open_cache": "4000"
  },
  "param_knowledge": "innodb_buffer_pool_size  \n- 控制 InnoDB 存储引擎用于缓存索引和数据的内存池大小；  \n- 推荐设置为物理内存的 50%~70%（需预留空间给操作系统及其他进程）；  \n- 是否动态生效：否（需重启生效）；  \n- 影响维度：内存（减少磁盘IO）、查询响应时间；  \n\ninnodb_adaptive_hash_index  \n- 控制 InnoDB 是否启用自适应哈希索引以加速等值查询；  \n- 推荐在高并发点查场景设为 ON，范围查询或写密集型场景设为 OFF；  \n- 是否动态生效：是；  \n- 影响维度：CPU（哈希计算开销）、内存（哈希索引占用）、查询吞吐量；  \n\noptimizer_search_depth  \n- 控制 SQL 优化器在生成执行计划时的搜索深度；  \n- 推荐值 5~10（过高易导致优化耗时激增，过低可能生成次优计划）；  \n- 是否动态生效：是；  \n- 影响维度：CPU（优化器计算复杂度）、查询计划质量；  \n\ninnodb_stats_persistent  \n- 控制 InnoDB 是否持久化统计信息到磁盘（避免重启后重新采样）；  \n- 推荐设为 ON 以保证统计信息稳定性；  \n- 是否动态生效：是；  \n- 影响维度：查询计划稳定性、统计信息采集开销；  \n\nmax_seeks_for_key  \n- 控制优化器对索引扫描的成本估算假设（值越低越倾向使用索引）；  \n- 推荐缺省值或根据数据分布调整（如数据倾斜可适当调高）；  \n- 是否动态生效：是；  \n- 影响维度：索引选择倾向性、JOIN 操作效率；"
}