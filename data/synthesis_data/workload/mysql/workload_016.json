{
  "app_name": "mysql",
  "app_version": "8.0",
  "bottlenecks": [
    "大事务导致锁持有时间过长"
  ],
  "system": {
    "os_version": "openEuler 24.03 LTS",
    "cpu_info": "8 核 @ 2.4GHz",
    "memory_info": "16GB DDR4",
    "storage_type": "NVMe SSD",
    "network_info": "万兆以太网",
    "runtime_environment": "物理机"
  },
  "workload": {
    "system": {
      "cpu_utilization": "75%",
      "memory_utilization": "12GB/16GB (75%)",
      "disk_iops": "15,000",
      "disk_latency": "2ms",
      "network_throughput": "800MB/s"
    },
    "mysql": {
      "qps": "5,000",
      "tps": "1,200",
      "active_transactions": "45",
      "lock_wait_time": "3.5s",
      "innodb_buffer_pool_hit_rate": "95%",
      "slow_queries": "15/min"
    }
  },
  "config": {
    "innodb_buffer_pool_size": "8G",
    "innodb_log_file_size": "2G",
    "innodb_flush_log_at_trx_commit": "2",
    "innodb_lock_wait_timeout": "30",
    "innodb_io_capacity": "2000",
    "innodb_io_capacity_max": "4000",
    "max_connections": "200",
    "transaction_isolation": "READ-COMMITTED"
  },
  "param_knowledge": "innodb_lock_wait_timeout  \n- 控制 InnoDB 事务等待行锁的最长时间（秒），超时后自动回滚；  \n- 推荐设置为 30-120（根据业务容忍度调整，避免过长阻塞）；  \n- 是否动态生效：是；  \n- 影响维度：锁竞争、事务吞吐量；  \n\ninnodb_rollback_on_timeout  \n- 控制锁等待超时后是否回滚整个事务（而非仅最后一条语句）；  \n- 推荐设置为 ON（大事务场景建议启用，避免部分提交）；  \n- 是否动态生效：否；  \n- 影响维度：事务一致性、锁释放速度；  \n\ninnodb_deadlock_detect  \n- 控制是否启用 InnoDB 死锁检测机制；  \n- 推荐设置为 ON（高并发场景可临时关闭缓解CPU压力）；  \n- 是否动态生效：是；  \n- 影响维度：CPU消耗、锁冲突处理效率；  \n\ninnodb_flush_log_at_trx_commit  \n- 控制事务提交时日志刷盘策略（1=严格持久化，2=折衷，0=高性能）；  \n- 推荐设置为 2（平衡可靠性与IO性能）；  \n- 是否动态生效：是；  \n- 影响维度：IOPS、事务延迟、数据安全性；  \n\nmax_allowed_packet  \n- 控制单次通信数据包大小上限（影响大事务SQL传输）；  \n- 推荐设置为 64M-256M（需匹配业务数据量）；  \n- 是否动态生效：是；  \n- 影响维度：网络带宽、内存占用；"
}