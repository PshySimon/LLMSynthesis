TUNE_TEMPLATE = """
你是一个资深系统调优专家 Agent，请根据以下输入内容，分析系统的性能瓶颈并推荐一组性能优化参数，输出推荐值及其依据。请确保所有推理逻辑出现在结论之前，且推荐理由必须与背景知识和上下文严格对应，不能主观臆测。 

---

【操作步骤】

1.识别瓶颈：从【性能瓶颈分析结果】中提取具体瓶颈点，并列出对应的调优维度。

2.筛选参数：结合【参数背景知识】，找出与瓶颈直接相关、具有调节空间的参数，并避免涉及不相关参数。

3.分析推荐值：

+ 查阅每个参数的定义、取值范围、是否动态生效、影响维度；

+ 参考【参数背景知识】中的描述，如果修改某个参数，考虑关联的参数是否也需要修改；

+ 结合【当前参数配置】分析当前各个参数是否已满足条件，若已满足条件则无需推荐；

+ 结合【系统上下文信息】（如硬件配置、连接数、内存大小、并发负载）；

+ 基于经验法则、参考计算公式或上下文中的相关值，推导推荐值；

4.生成推荐：在充分分析的基础上，输出推荐参数，请你详细推导think step by step的过程，给出推荐的理由。

5.分析推荐参数合理取值：针对上面推荐的参数，每一项必须先说明推荐值的推理过程，再给出结论性的推荐值。
---

【当前参数配置】
{$CUR_CONFIG}

---

【性能瓶颈分析结果】
{$BOTTLENECK_REPORT}

---

【系统上下文信息】
{$SYSTEM_INFO}

---

【参数背景知识】
{$PARAM_KNOWLEDGE}
 

---

【输出格式】

请按如下结构输出推荐结果，你无需考虑参数是否需要重启：

【推荐参数 1】  
- 参数名：xxx  
- 推荐值：xxx  
- 推荐理由：xxx  
- 推荐值依据：包括计算公式、上下文引用、经验法则等  
- 背景知识摘要：定义、取值范围、是否动态生效、影响维度、当前参数设置是否已满足
"""

# 模板的填充流程：
# 1.随机选取一组基本配置系统配置+应用配置+构造的瓶颈
# 2.基于构造的瓶颈模拟生成细粒度的性能瓶颈描述
# 3.基于性能瓶颈，选取相关的可调配置参数描述
# 4.基于当前的系统配置、应用配置和瓶颈，模拟输出当前系统可能的配置
CONFIG_GEN_PROMPT = """
你是一个资深系统运维专家，请基于 {$APPLICATION} 的【当前的工作负载】，生成一组当前系统的可能的核心参数配置。
要求如下：

1. 输出一组关键性能相关参数，形式为 `参数名 = 参数值`；
2. 参数应与 {$APPLICATION} 相关，例如资源管理、调度、缓存、线程池、IO 相关；
3. 至少输出 5 个参数，最多不超过 10 个；
4. 参数值应合理，符合实际系统场景；
5. 仅输出参数配置本身，不添加说明或注释。

【当前的工作负载】
{$WORKLOAD_PROFILE}

示例格式：
param_a = 2048
param_b = 64M
param_c = 3
param_d = true
param_e = 5000
"""

PERFORMANCE_BOTTLENECK_GEN_PROMPT = """
你是一个性能调优专家，请基于 {$APPLICATION} 当前的性能瓶颈的大致情况，模拟生成一段性能瓶颈分析结果。

要求如下：

1. 总结 2~4 个主要瓶颈问题；
2. 使用专业术语表达，语义清晰流畅，避免模板化表达；
3. 可结合负载场景（如高并发写入、大量随机读、长批任务堆积等）进行合理描述；

示例输出格式，尽量不要引入额外的描述：
在高并发写入场景下，日志刷盘频率过高，导致事务延迟升高；
系统内存使用率偏低，缓存命中率下降，频繁访问底层存储；
部分后台线程长时间阻塞，任务堆积，影响整体吞吐；
偶发高峰期连接数接近上限，影响请求响应时间。
"""

SYSTEM_INFO_PROMPT = """
你是一个企业级系统架构专家，请描述某个生产环境下 {$APPLICATION_NAME} 系统的运行上下文信息，供调优分析使用。

要求如下：

1. 输出内容必须包含两类上下文信息：

【A】应用相关上下文信息：
- 应用名称：{$APPLICATION_NAME}  
- 应用版本：{$APPLICATION_VERSION}  
- 工作负载特性：{$WORKLOAD_PROFILE}（如：高并发写入、重批处理、延迟敏感）  
- 请求模式与并发特征：{$REQUEST_PATTERN}（如：平均并发数、峰值、周期性波动等）

【B】系统和硬件配置：
- 操作系统版本：{$OS_VERSION}  
- CPU 信息：{$CPU_INFO}（如：32 核 @ 2.6GHz）  
- 内存配置：{$MEMORY_INFO}（如：128GB DDR4）  
- 存储类型：{$STORAGE_TYPE}（如：NVMe SSD、本地 RAID、分布式存储）  
- 网络环境（可选）：{$NETWORK_INFO}（如：万兆网络）
- 运行环境：{$RUNTIME_ENVIRONMENT}（如：虚拟机、物理机、docker容器环境）

2. 保持条列格式，每项为独立一行；
3. 请使用自然语言描述，保持专业、真实、可读。

示例格式：
应用名称：{$APPLICATION_NAME}
应用版本：{$APPLICATION_VERSION}
工作负载特性：{$WORKLOAD_PROFILE}
请求模式与并发特征：{$REQUEST_PATTERN}
操作系统版本：{$OS_VERSION}
CPU 信息：{$CPU_INFO}
内存配置：{$MEMORY_INFO}
存储类型：{$STORAGE_TYPE}
网络环境：{$NETWORK_INFO}
运行环境：{$RUNTIME_ENVIRONMENT}
"""


PARAM_KNOWLEDGE_PROMPT = """
你是一个{}调优文档专家，请根据【性能瓶颈】描述，给出可调相关应用参数，并为这些参数撰写背景知识说明。

每个参数说明需包含：

1. 参数定义：该参数控制什么；
2. 推荐值或取值范围（可以是经验规则或公式）；
3. 是否支持动态生效；
4. 影响的性能维度：如 CPU、网络、内存、IO等；

要求：

- 每个参数单独成段；
- 输出 3~5 个不同参数；
- 保持通用、简洁、专业，不使用示例或实例名。

【性能瓶颈】
{}

示例格式：

param_name  
- 控制 $RESOURCE_TYPE 的最大使用量；  
- 推荐设置为 $RECOMMENDED_RULE；  
- 是否动态生效：$YES_OR_NO；  
- 影响维度：$PERFORMANCE_IMPACT；
"""
